// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Get extends ethereum.Event {
  get params(): Get__Params {
    return new Get__Params(this);
  }
}

export class Get__Params {
  _event: Get;

  constructor(event: Get) {
    this._event = event;
  }

  get add(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get balance(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class test extends ethereum.SmartContract {
  static bind(address: Address): test {
    return new test("test", address);
  }
}

export class WriteCall extends ethereum.Call {
  get inputs(): WriteCall__Inputs {
    return new WriteCall__Inputs(this);
  }

  get outputs(): WriteCall__Outputs {
    return new WriteCall__Outputs(this);
  }
}

export class WriteCall__Inputs {
  _call: WriteCall;

  constructor(call: WriteCall) {
    this._call = call;
  }

  get ad(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get nu(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class WriteCall__Outputs {
  _call: WriteCall;

  constructor(call: WriteCall) {
    this._call = call;
  }
}
